package day12.java;

/**
 * ToDo
 *  1、方法的重写：子类继承父类以后，可以对父类中同名同参的方法进行覆盖
 *  2、应用：重写以后，当创建子类对象后，通过子类对象调用子父类中同名同参的反复噶时，实际上执行的是子类重写父类的方法
 *  3、 重写的规定：
 *              方法的声明：权限修饰符 返回值类型 方法名(形参列表) throws 异常的类型{
 *                          //方法体
 *              }
 *              约定俗成：子类中的叫重写的方法，父类中的叫被重写的方法
 *          1）子类重写的方法的方法名和形参列表与父类被重写的方法名和形参列表相同
 *          2）子类重写的方法权限修饰符不小于父类被重写的方法的权限修饰符
 *              > 特殊情况：子类不能重写父类中声明为private权限的方法
 *          3）返回值类型：
 *              > 父类被重写的方法返回值类型时void，则子类重写的方法的返回值类型只能是void
 *              > 父类被重写的方法返回值类型时A类型，则子类重写的方法的返回值类型可以是A类或者A类的子类
 *              > 父类被重写的方法的返回值类型是基本数据类型，则子类重写的方法返回值类型必须是相同的基本数据类型
 *          4）子类重写的方法抛出的异常类型不大于被重写的方法抛出的异常类型
 ********************************************************************************************************
 *      子类和父类中的同名同参数的方法要么都声明为非static（考虑重写），要么都声明为static（不是重写）
 *  面试题：区分方法的重载与重写
 * @authorLong
 * @Date2020/2/20 20:44
 */
public class PersonTest {
    public static void main(String[] args) {

        Student s =new Student("计算机科学与技术");
        s.eat();
        s.walk(10);

        s.study();

        Person p1 =new Person();
        p1.eat();
    }
}
